{"version":3,"sources":["components/App/App.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["Conteiner","styled","div","Title","h1","Section","title","children","Button","button","FeedbackOptions","feedbackAdd","event","props","onLeaveFeedback","target","getAttribute","options","this","map","option","type","name","onClick","toUpperCase","split","splice","length","join","shortid","generate","Component","Feedback","p","Statistics","good","bad","neutral","total","positivePercentage","Info","Notification","message","App","state","value","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEaA,EAAYC,IAAOC,IAAV,+DCATC,EAAQF,IAAOG,GAAV,0I,OCcHC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,cAACJ,EAAD,UAAQG,IACPC,MCLMC,EAASP,IAAOQ,OAAV,iG,iBCGEC,E,4MACnBC,YAAc,SAAAC,GACZ,EAAKC,MAAMC,gBAAgBF,EAAMG,OAAOC,aAAa,U,4CAGvD,WAAU,IAAD,OACCC,EAAYC,KAAKL,MAAjBI,QACR,OACE,mCACGA,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACZ,EAAD,CACEa,KAAK,SACLC,KAAMF,EACNG,QAAS,EAAKZ,YAHhB,SAMGS,EAAO,GAAGI,cACTJ,EACGK,MAAM,IACNC,OAAO,EAAGN,EAAOO,OAAS,GAC1BC,KAAK,KANLC,IAAQC,qB,GAdoBC,aCJhCC,EAAW/B,IAAOgC,EAAV,2HCoBNC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,eAACP,EAAD,oBAAiBG,KACjB,eAACH,EAAD,uBAAoBK,KACpB,eAACL,EAAD,mBAAgBI,KAChB,eAACJ,EAAD,qBAAkBM,KACjBF,EAAM,GAAK,eAACJ,EAAD,iCAA8BO,EAA9B,WCTLC,EAAOvC,IAAOgC,EAAV,gFCQFQ,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACF,EAAD,UAAOE,KCIKC,E,4MACnBC,MAAQ,CACNT,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAEPtB,gBAAkB,SAAA+B,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAQE,EAAUF,GAAS,O,EAIhCG,mBAAqB,WACnB,OAAO,EAAKJ,MAAMT,KAAO,EAAKS,MAAMR,IAAM,EAAKQ,MAAMP,S,EAGvDY,gCAAkC,WAChC,OACG,EAAKL,MAAMT,MACT,EAAKS,MAAMT,KAAO,EAAKS,MAAMR,IAAM,EAAKQ,MAAMP,SACjD,K,4CAIJ,WACE,MAA+BnB,KAAK0B,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,QACnB,OACE,eAACrC,EAAD,WACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEW,QAAS,CAAC,OAAQ,UAAW,OAC7BH,gBAAiBI,KAAKJ,oBAG1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACG8B,EAAM,GAAKD,EAAO,GAAKE,EAAU,EAChC,cAAC,EAAD,CACEF,KAAMA,EACNC,IAAKA,EACLC,QAASA,EACTC,MAAOpB,KAAK8B,qBACZT,mBAAoBrB,KAAK+B,oCAG3B,cAAC,EAAD,CAAcP,QAAQ,+B,GA5CDX,aCFjCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7618a4bd.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Conteiner = styled.div`\n  padding: 20px;\n  width: 500px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  padding: 5px;\n  margin-top: 10px;\n  text-transform: capitalize;\n  font-size: 25px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  margin: 5px;\n  text-transform: capitalize;\n`;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './FeedbackOptions.styled';\nimport shortid from 'shortid';\n\nexport default class FeedbackOptions extends Component {\n  feedbackAdd = event => {\n    this.props.onLeaveFeedback(event.target.getAttribute('name'));\n  };\n\n  render() {\n    const { options } = this.props;\n    return (\n      <>\n        {options.map(option => (\n          <Button\n            type=\"button\"\n            name={option}\n            onClick={this.feedbackAdd}\n            key={shortid.generate()}\n          >\n            {option[0].toUpperCase() +\n              option\n                .split('')\n                .splice(1, option.length - 1)\n                .join('')}\n          </Button>\n        ))}\n      </>\n    );\n  }\n}\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import styled from '@emotion/styled';\nexport const Feedback = styled.p`\n  padding: 4px 8px;\n  border-radius: 4px;\n  text-transform: capitalize;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Feedback } from './Statistics.styled';\n\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => {\n  return (\n    <>\n      <Feedback>Good: {good}</Feedback>\n      <Feedback>Neutral: {neutral}</Feedback>\n      <Feedback>Bad: {bad}</Feedback>\n      <Feedback>Total: {total}</Feedback>\n      {bad > 0 && <Feedback>Positive Feedback: {positivePercentage}%</Feedback>}\n    </>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import styled from '@emotion/styled';\nexport const Info = styled.p`\n  font-size: 20px;\n  padding: 10px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Info } from './Notification.styled';\nconst Notification = ({ message }) => {\n  return <Info>{message}</Info>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import { Component } from 'react';\nimport { Conteiner } from './App.styled';\nimport Section from 'components/Section/Section';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (\n      (this.state.good /\n        (this.state.good + this.state.bad + this.state.neutral)) *\n      100\n    );\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    return (\n      <Conteiner>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {bad > 0 || good > 0 || neutral > 0 ? (\n            <Statistics\n              good={good}\n              bad={bad}\n              neutral={neutral}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Conteiner>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}